@import "core/typography.scss";
@import "core/utility.scss";
@import "core/scaffold.scss";

@property --sketchy-arrow-width {
  syntax: "<length>";
  initial-value: 1px;
  inherits: true;
}
@property --sketchy-arrow-tip-spread {
  syntax: "<angle>";
  initial-value: 45deg;
  inherits: true;
}
@property --sketchy-arrow-tip-size {
  syntax: "<number>";
  initial-value: 40;
  inherits: true;
}
@property --sketchy-arrow-point-approx {
  syntax: "<number>";
  initial-value: 3;
  inherits: true;
}
@property --sketchy-arrow-count {
  syntax: "<integer>";
  initial-value: 3;
  inherits: true;
}
@property --sketchy-arrow-color {
  syntax: "<color>";
  initial-value: black;
  inherits: true;
}
@property --sketchy-arrow-random-seed {
  syntax: "<integer>";
  initial-value: 1234;
  inherits: true;
}
@property --lcd-display-count {
  syntax: "<integer>";
  initial-value: 4;
  inherits: true;
}

:root {
  font-family: Raleway, system-ui, sans-serif;
  --slide-bg: white;
  --sliding-duration: 0ms;
  --fragment-duration: 100ms;
  --brand-color: #f60;
  --brand-color-gfy: #822a7c;
  --sketchy-arrow-width: 0.1em;
  --sketchy-arrow-tip-size: 20;
}

p-deck::after {
  position: fixed;
  bottom: 0.5em;
  left: 0;
  right: 0;
  font-size: 50%;
  text-align: center;
  content: "@MaxArt2501";
  color: #001236;
  z-index: 100;
}

p-fragment.landing {
  position: absolute;
  transform: scale(3);
  transition: opacity var(--fragment-duration, 300ms),
    transform var(--fragment-duration, 300ms);

  &[aria-hidden="false"],
  p-deck[mode="speaker"] & {
    transform: scale(1);
  }
}

.our-header {
  border-left: var(--brand-color) solid 0.15em;
  padding: 0.5em;
  margin: 0 0 0.5em;
}

.columns {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(5em, 1fr));
  grid-gap: 1em;
  align-items: center;
}

.cover {
  --slide-bg: black;
  background: var(--slide-bg) no-repeat center/133vmin
    url("../img/logo-antreem-contour.svg");
  text-align: center;
  color: white;

  h1, a {
    color: var(--brand-color);
  }

  small {
    display: block;
  }

  .uff-logo {
    height: 2em;
    display: block;
  }

  .logo {
    background: white;
    padding: 0.2em;
    border-radius: 0.5em;
    height: 5em;
  }

  &-devcast {
    --slide-bg: #057f36;
    color: white;
    text-align: center;

    img {
      z-index: -1;
    }

    h3 {
      font-weight: normal;
      font-style: italic;
      margin-block-end: 0.5em;
    }
    h4 {
      margin: 0;
    }
    small {
      font-weight: normal;
      display: block;
    }
    a {
      color: inherit;
    }
  }

  &-devfest {
    --slide-bg: #f0f0f0;
    --slide-padding: 1em;
    --border-width: calc(var(--slide-padding) / 20);
    display: grid;
    grid-template-columns: auto auto;
    grid-template-rows: auto 1fr auto;
    justify-content: space-between;
    color: #1e1e1e;
    background-image:
      linear-gradient(to right, currentColor var(--border-width), #fff 0, calc(100% - var(--border-width)), currentColor 0),
      linear-gradient(to bottom, currentColor var(--border-width), #fff 0, calc(100% - var(--border-width)), currentColor 0),
      radial-gradient(circle at calc(2 * var(--slide-padding)) calc(100% - 2 * var(--slide-padding)), #fff calc(var(--slide-padding) - var(--border-width)), currentColor 0, var(--slide-padding), transparent 0),
      radial-gradient(circle at calc(100% - 2 * var(--slide-padding)) calc(2 * var(--slide-padding)), #fff calc(var(--slide-padding) - var(--border-width)), currentColor 0, var(--slide-padding), transparent 0);
    background-repeat: no-repeat;
    background-size: calc(100% - 2 * var(--slide-padding)) calc(100% - 4 * var(--slide-padding)), calc(100% - 4 * var(--slide-padding)) calc(100% - 2 * var(--slide-padding)), 100%, 100%;
    background-position: var(--slide-padding) calc(2 * var(--slide-padding)), calc(2 * var(--slide-padding)) var(--slide-padding), 0 0, 0 0;

    .devfest-logo, .devfest-footer {
      background-color: var(--slide-bg);
      border: var(--border-width) solid;
      position: relative;

      &::before, &::after {
        content: '';
        position: absolute;
        width: calc(var(--slide-padding) * 2);
        height: calc(var(--slide-padding) * 2);
        background-image: radial-gradient(circle at var(--slide-padding) var(--slide-padding), #fff calc(var(--slide-padding) - var(--border-width)), currentColor 0, var(--slide-padding), var(--slide-bg) 0);
        background-clip: content-box;
      }
    }
    .devfest-logo {
      display: grid;
      border-top-style: none;
      border-left-style: none;
      padding: 0 var(--slide-padding) var(--slide-padding) 0;
      align-self: flex-start;
      border-bottom-right-radius: var(--slide-padding);

      > img {
        grid-area: 1 / 1;
        height: 2.5em;
      }
      &::before, &::after {
        padding: 0 var(--slide-padding) var(--slide-padding) 0;
      }
      &::before {
        inset: 100% auto auto 0;
      }
      &::after {
        inset: 0 auto auto 100%;
      }

      > span {
        grid-area: 1 / 1;
        place-self: center;
        font-size: 75%;
        margin-top: 2em;
      }
    }
    .devfest-footer {
      grid-area: 3 / 2;
      display: flex;
      gap: var(--slide-padding);
      border-right-style: none;
      border-bottom-style: none;
      padding: var(--slide-padding) 0 0 var(--slide-padding);
      align-self: flex-end;
      border-top-left-radius: var(--slide-padding);

      > img {
        height: 1.5em;
      }
      &::before, &::after {
        padding: var(--slide-padding) 0 0 var(--slide-padding);
      }
      &::before {
        inset: auto 0 100% auto;
      }
      &::after {
        inset: auto 100% 0 auto;
      }
    }
    .devfest-author {
      font-family: 'Roboto Mono',monospace;
      font-weight: 300;
      font-size: 75%;
      margin: 0 0 calc(4em / 3) calc(4em / 3);
    }
    h1 {
      margin: 0.3em 0.5em;
      grid-column: 1 / 3;
    }

    ~ p-slide {
      --slide-bg: #f0f0f0;
    }
  }
}

.links {
  font-size: 70%;
  align-self: center;
  margin-top: 0.5em;

  li:not(:first-child) {
    margin-top: inherit;
  }
  a {
    display: block;
    width: fit-content;
    padding-left: 1.75em;
  }
}

.antreem-logo {
  position: absolute;
  height: 12em;
  right: 0;
  bottom: -4em;
}
.my-data {
  > h2 {
    margin-bottom: 0;
  }
  a {
    font-weight: bold;
  }
  a:first-of-type {
    color: var(--brand-color);
  }
  a:last-of-type {
    color: var(--brand-color-gfy);
  }
}
.my-face {
  border: 0.1em solid var(--brand-color);
  border-radius: 50%;
  height: 6em;
  float: left;
  margin: 0 1em;
}
.my-info {
  width: 8em;
  text-align: center;
  margin: 2em 2em 0;
  img {
    height: 1em;
    vertical-align: middle;
  }
}
.final-link {
  a {
    color: var(--brand-color);
  }
  img {
    display: block;
    margin: 1em auto 0;
    height: 7em;
  }
}

.shadow {
  box-shadow: 0 0 0.5em rgba(black, 0.5);
}

.javascript {
  background-color: #f7df1e;
  padding: 0 0.25em;
}

.big-x {
  &-wrapper {
    position: relative;
  }

  &::before,
  &::after {
    content: "";
    top: -25%;
    left: 50%;
    height: 150%;
    width: 0.5em;
    border-radius: 0.25em;
    transform: rotate(45deg);
    background: rgba(red, 0.9);
    position: absolute;
  }
  &::after {
    transform: rotate(-45deg);
  }
}

.sketchy-arrow {
  position: absolute;
  background: url('data:image/svg+xml,<svg viewBox="0 0 16 9" xmlns="http://www.w3.org/2000/svg"><path d="M0,.5A19.3,19.3 0 0 1 16,9l-1-5 1,5-4.5-1.8" fill="none" stroke="black"/></svg>');
  background: paint(sketchy-arrow);
  aspect-ratio: 16 / 9;
  animation: sketchy 0.3s steps(3) infinite;
  filter: drop-shadow(0.075em 0.075em 0 white);
  text-align: center;
}

@keyframes sketchy {
  from {
    --sketchy-arrow-random-seed: 20;
  }
  to {
    --sketchy-arrow-random-seed: 40;
  }
}

.lcd-display {
  display: grid;
  justify-content: center;
  padding: 0.5em;
  margin: 0.5em;
  background-color: khaki;
  grid-auto-flow: column;
  grid-template-columns: repeat(var(--lcd-display-count, 4), 0.25em 1em 0.5em);
  grid-template-rows: 0.25em 1em 0.25em 1em 0.25em;

  & > :nth-child(7n + 6),
  & > :nth-child(7n + 7) {
    width: 0.3em;
  }
  & > :nth-child(7n + 1),
  & > :nth-child(7n + 6) {
    grid-row: 2;
  }
  & > :nth-child(7n + 2),
  & > :nth-child(7n + 7) {
    grid-row: 4;
  }
  & > :nth-child(7n + 3) {
    grid-row: 1;
  }
  & > :nth-child(7n + 4) {
    grid-row: 3;
  }
  & > :nth-child(7n + 5) {
    grid-row: 5;
  }
  & > .on {
    background-color: currentColor;
    clip-path: polygon(
      0.125em 0,
      calc(100% - 0.125em) 0,
      100% 0.125em,
      100% calc(100% - 0.125em),
      calc(100% - 0.125em) 100%,
      0.125em 100%,
      0 calc(100% - 0.125em),
      0 0.125em
    );
    margin: -0.025em;
  }
}

.padme-anakin {
  display: grid;
  grid-template-columns: auto auto;
  grid-template-rows: 50% 50%;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  justify-content: center;

  img {
    height: 100%;
  }
}

.encapsulated-css {
  display: flex;

  > div {
    display: flex;
    padding: 0.25em;
    box-sizing: border-box;
    height: 3em;
    align-items: center;
    justify-content: center;
    position: relative;
    box-shadow: inset 0 0 0 0.25em white, inset 0 0 0 0.35em lightgray;
    border-radius: 1em;

    &::before {
      content: "";
      position: absolute;
      width: 0.1em;
      height: 0.5em;
      background-color: currentColor;
      left: calc(50% - 0.125em);
      top: -0.25em;
      z-index: 5;
    }
  }
  .target {
    box-shadow: inset 0 0 0 0.25em white, inset 0 0 0 0.35em green;
  }
  .evil {
    box-shadow: inset 0 0 0 0.25em white, inset 0 0 0 0.35em red;
  }
  .making {
    position: absolute;
    inset: 0;
    border-radius: 1em;
  }
}

gfy-blob {
  display: none;
  position: absolute;
  height: 14em;
  width: 14em;
  right: -2em;
  bottom: -2em;
  z-index: -1;
  filter: brightness(2);

  p-slide[aria-hidden='false'] & {
    display: block;
  }
}

.site {
  border: .1em solid;
  font-size: 75%;
  width: 12em;
  height: 100%;
  background: white;

  p-fragment:has(&) {
    opacity: 1;
    transition: transform calc(var(--fragment-duration) * 2);
    transform: translateX(-10em);
    z-index: -1;

    &[aria-hidden="false"] {
      transform: translateX(0);
    }
  }

  header {
    padding: .5em;
    border-bottom: inherit;
    display: flex;
    gap: .25em;
    background: #eee;

    span {
      flex: 1;
      border-radius: 10em;
      padding: 0 .5em;
      border: .1em solid;
      background: white;
    }

    &::before {
      content: '🏠';
      filter: contrast(0) brightness(0.1);
    }
  }
  ul {
    list-style-type: disc;
    padding-inline: 1.5em .5em;
  }
  li {
    margin-block: .5em;
  }
  li a {
    display: block;
    color: blue;
    text-decoration: underline;
    transition: color 10ms calc(var(--fragment-duration) * 4) linear;
  }
}
p-slide:has(.site) {
  flex-direction: row;
  gap: 1em;
}

.pointer-link {
  position: absolute;
  background: url(../img/cursor-default.svg) no-repeat;
  width: 1em;
  aspect-ratio: 19 / 22;
  inset: 0 auto auto 0;
  translate: -2em -2em;
  transition: translate calc(var(--fragment-duration) * 4);

  &[aria-hidden='false'] {
    translate: 7em 7em;
    animation: click calc(var(--fragment-duration) * 4) calc(var(--fragment-duration) * 4) linear 1 forwards;
  }

  [index="2"][aria-hidden='false'] ~ & {
    translate: 7em 9.2em;
    animation-name: click-alt;
  }
  [index="3"][aria-hidden='false'] ~ & {
    translate: 6em 11.4em;
    animation-name: click;
  }
}

@for $i from 0 through 5 {
  p-fragment[index="#{$i}"][aria-hidden='false']:has(~ .site) ~ :is(.site, p-fragment:has(> .site)) li a[data-index="#{$i}"] {
    color: purple;
  }
}

@keyframes click {
  0% { scale: 1; background-image: url(../img/cursor-pointer.svg); }
  25% { scale: 1; }
  25.1% { scale: .8; }
  74.9% { scale: .8; }
  75% { scale: 1; }
  100% { scale: 1; background-image: url(../img/cursor-pointer.svg); }
}
@keyframes click-alt {
  0% { scale: 1; background-image: url(../img/cursor-pointer.svg); }
  25% { scale: 1; }
  25.1% { scale: .8; }
  74.9% { scale: .8; }
  75% { scale: 1; }
  100% { scale: 1; background-image: url(../img/cursor-pointer.svg); }
}

[href="//nowhere.really"] ~ a {
  color: rgb(85, 26, 139);
}
